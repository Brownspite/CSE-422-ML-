# -*- coding: utf-8 -*-
"""22301442_Mohtasim Ahmed_ CSE422_sec23.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mblkPndHTBryX_chqjjN3WGzhw1mVQJE
"""

import random
import math

def calc_strength(val):
    return math.log2(val + 1) + val / 10
def get_utility(max_val, min_val):
    rand_factor = (-1) ** random.randint(0, 1) * random.uniform(0.1, 1.0)
    return calc_strength(max_val) - calc_strength(min_val) + rand_factor
def minimax(depth, is_max, alpha, beta, max_val, min_val):
    if depth == 5:
        return get_utility(max_val, min_val)

    best = -float("inf") if is_max else float("inf")
    for i in range(2):
        score = minimax(depth + 1, not is_max, alpha, beta, max_val, min_val)
        if is_max:
            best = max(best, score)
            alpha = max(alpha, best)
        else:
            best = min(best, score)
            beta = min(beta, best)
        if beta <= alpha:
            break
    return best

def play_games(first, player1_strength, player2_strength, game=0, results=None):
    if results is None:
        results = []
    if game == 4:
        return results
    if (game % 2 == 0 and first == 0) or (game % 2 == 1 and first == 1):
        max_val, min_val = player1_strength, player2_strength
        max_player = "Magnus Carlsen"
    else:
        max_val, min_val = player2_strength, player1_strength
        max_player = "Fabiano Caruana"
    result = minimax(0, True, -float("inf"), float("inf"), max_val, min_val)
    winner = max_player if result > 0 else "Draw" if result == 0 else "Opponent"
    results.append((winner, result))

    return play_games(first, player1_strength, player2_strength, game + 1, results)

def main():
    first = int(input("Enter starting player for game 1 (0 for Carlsen, 1 for Caruana): "))
    player1_strength = float(input("Enter base strength for Carlsen: "))
    player2_strength = float(input("Enter base strength for Caruana: "))
    results = play_games(first, player1_strength, player2_strength)
    p1_wins = sum(1 for winner, _ in results if winner == "Magnus Carlsen")
    p2_wins = sum(1 for winner, _ in results if winner == "Fabiano Caruana")
    draws = sum(1 for winner, _ in results if winner == "Draw")
    overall = "Magnus Carlsen" if p1_wins > p2_wins else "Fabiano Caruana" if p2_wins > p1_wins else "Draw"
    for j, (winner, score) in enumerate(results, 1):
        print(f"Game {j} Winner: {winner} (Utility value: {score:.2f})")

    print("\nOverall Results:")
    print(f"Magnus Carlsen Wins: {p1_wins}")
    print(f"Fabiano Caruana Wins: {p2_wins}")
    print(f"Draws: {draws}")
    print(f"Overall Winner: {overall}")

if __name__ == "__main__":
    main()